/**
 * Command Class Screen Md, version 1.
 *
 * Auto-generated, do not edit.
 */

import { CommandClasses, CommandClassPacket, CommandPacket, Packet } from "@ezwave/codec";
import { CommandDefinition, convertFromJsonCommand, JsonCommandDefinition } from "@ezwave/spec";

export enum ScreenMdV1Commands {
	ScreenMdGet = 0x01,
	ScreenMdReport = 0x02,
}

export interface ScreenMdV1ScreenMdGetData {
	numberOfReports: number; // 1 byte unsigned integer
	nodeId: number; // 1 byte unsigned integer
}

export interface ScreenMdV1ScreenMdReportData {
	moreData: boolean; // properties1[7]
	screenSettings: number; // properties1[5..3]
	charPresentation: number; // properties1[2..0]
	vg: Array<{ // automatic length
		lineSettings: number; // properties1[7..5]
		clear: boolean; // properties1[4]
		lineNumber: number; // properties1[3..0]
		characterPosition: number; // 1 byte unsigned integer
		character: Buffer; // variable length
	}>;
}

export class ScreenMdV1 extends CommandClassPacket<ScreenMdV1Commands> {
	public static readonly commandClass: number = CommandClasses.ScreenMd; // 0x92 (146)
	public static readonly version: number = 1;

	public static matches(packet: Packet): boolean {
		return packet.commandClass === this.commandClass;
	}

	public constructor(commandAndPayload: Buffer) {
		super(ScreenMdV1, commandAndPayload);
	}
}

export class ScreenMdGet extends CommandPacket<ScreenMdV1ScreenMdGetData> {
	public static readonly CommandClass: typeof ScreenMdV1 = ScreenMdV1;
	public static readonly command: number = 0x01; // 1
	public static readonly definition: CommandDefinition = convertFromJsonCommand({
		"command": 1,
		"name": "ScreenMdGet",
		"help": "Screen Md Get",
		"status": "Active",
		"params": [
			{
				"type": "Integer",
				"name": "numberOfReports",
				"help": "Number of Reports",
				"length": 1
			},
			{
				"type": "Integer",
				"name": "nodeId",
				"help": "Node ID",
				"length": 1,
				"valueType": "NodeNumber"
			}
		]
	} as JsonCommandDefinition);

	public static matches(packet: Packet): boolean {
		return packet.tryAs(ScreenMdV1)?.command === this.command;
	}

	public constructor(data: Buffer | ScreenMdV1ScreenMdGetData) {
		super(ScreenMdGet, data);
	}
};

export class ScreenMdReport extends CommandPacket<ScreenMdV1ScreenMdReportData> {
	public static readonly CommandClass: typeof ScreenMdV1 = ScreenMdV1;
	public static readonly command: number = 0x02; // 2
	public static readonly definition: CommandDefinition = convertFromJsonCommand({
		"command": 2,
		"name": "ScreenMdReport",
		"help": "Screen Md Report",
		"status": "Active",
		"params": [
			{
				"type": "Bitfield",
				"name": "properties1",
				"help": "Properties1",
				"length": 1,
				"fields": [
					{
						"fieldType": "Boolean",
						"name": "moreData",
						"mask": 128,
						"shift": 7
					},
					{
						"fieldType": "Boolean",
						"name": "reserved",
						"mask": 64,
						"shift": 6,
						"reserved": true
					},
					{
						"fieldType": "Integer",
						"name": "screenSettings",
						"mask": 56,
						"shift": 3
					},
					{
						"fieldType": "Integer",
						"name": "charPresentation",
						"mask": 7,
						"shift": 0
					}
				]
			},
			{
				"type": "Group",
				"name": "vg",
				"help": "vg",
				"length": {
					"lengthType": "Auto"
				},
				"params": [
					{
						"type": "Bitfield",
						"name": "properties1",
						"help": "Properties1",
						"length": 1,
						"fields": [
							{
								"fieldType": "Integer",
								"name": "lineSettings",
								"mask": 224,
								"shift": 5
							},
							{
								"fieldType": "Boolean",
								"name": "clear",
								"mask": 16,
								"shift": 4
							},
							{
								"fieldType": "Integer",
								"name": "lineNumber",
								"mask": 15,
								"shift": 0
							}
						]
					},
					{
						"type": "Integer",
						"name": "characterPosition",
						"help": "Character Position",
						"length": 1
					},
					{
						"type": "Integer",
						"name": "numberOfCharacters",
						"help": "Number of Characters",
						"length": 1,
						"lengthOf": {
							"refs": [
								"vg.character"
							]
						},
						"isAutogenerated": true
					},
					{
						"type": "Blob",
						"name": "character",
						"help": "Character",
						"length": {
							"lengthType": "Ref",
							"from": {
								"ref": "vg.numberOfCharacters"
							}
						}
					}
				]
			}
		]
	} as JsonCommandDefinition);

	public static matches(packet: Packet): boolean {
		return packet.tryAs(ScreenMdV1)?.command === this.command;
	}

	public constructor(data: Buffer | ScreenMdV1ScreenMdReportData) {
		super(ScreenMdReport, data);
	}
};
