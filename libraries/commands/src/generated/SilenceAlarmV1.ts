/**
 * Command Class Silence Alarm, version 1.
 *
 * Auto-generated, do not edit.
 */

import { CommandClasses, CommandClassPacket, CommandPacket, Packet } from "@ezwave/codec";
import { CommandDefinition, convertFromJsonCommand, JsonCommandDefinition } from "@ezwave/spec";

export enum SilenceAlarmV1Commands {
	SensorAlarmSet = 0x01,
}

export interface SilenceAlarmV1SensorAlarmSetData {
	mode: number; // 1 byte unsigned integer
	seconds: number; // 2 byte unsigned integer
	bitMask: Buffer; // variable length
}

export class SilenceAlarmV1 extends CommandClassPacket<SilenceAlarmV1Commands> {
	public static readonly commandClass: number = CommandClasses.SilenceAlarm; // 0x9d (157)
	public static readonly version: number = 1;

	public static matches(packet: Packet): boolean {
		return packet.commandClass === this.commandClass;
	}

	public constructor(commandAndPayload: Buffer) {
		super(SilenceAlarmV1, commandAndPayload);
	}
}

export class SensorAlarmSet extends CommandPacket<SilenceAlarmV1SensorAlarmSetData> {
	public static readonly CommandClass: typeof SilenceAlarmV1 = SilenceAlarmV1;
	public static readonly command: number = 0x01; // 1
	public static readonly definition: CommandDefinition = convertFromJsonCommand({
		"command": 1,
		"name": "SensorAlarmSet",
		"help": "Sensor Alarm Set",
		"status": "Active",
		"params": [
			{
				"type": "Integer",
				"name": "mode",
				"help": "Mode",
				"length": 1,
				"values": {
					"0": {
						"name": "DisableSoundingOfAllSensorAlarms",
						"help": "Disable sounding of all sensor alarms"
					},
					"1": {
						"name": "DisableSoundingOfAllSensorAlarmsIndependentOfBitMaskWhichHaveReceivedTheAlarm",
						"help": "Disable sounding of all sensor alarms independent of bit mask which have received the alarm"
					},
					"2": {
						"name": "DisableSoundingOfAllSensorAlarmsAccordingToBitMask",
						"help": "Disable sounding of all sensor alarms according to bit mask"
					},
					"3": {
						"name": "DisableSoundingOfAllSensorAlarmsAccordingToBitMaskWhichHaveReceivedTheAlarm",
						"help": "Disable sounding of all sensor alarms according to bit mask which have received the alarm"
					}
				}
			},
			{
				"type": "Integer",
				"name": "seconds",
				"help": "Seconds",
				"length": 2
			},
			{
				"type": "Integer",
				"name": "numberOfBitMasks",
				"help": "Number of Bit Masks",
				"length": 1,
				"lengthOf": {
					"refs": [
						"bitMask"
					]
				},
				"isAutogenerated": true
			},
			{
				"type": "Blob",
				"name": "bitMask",
				"help": "Bit Mask",
				"length": {
					"lengthType": "Ref",
					"from": {
						"ref": "numberOfBitMasks"
					}
				}
			}
		]
	} as JsonCommandDefinition);

	public static matches(packet: Packet): boolean {
		return packet.tryAs(SilenceAlarmV1)?.command === this.command;
	}

	public constructor(data: Buffer | SilenceAlarmV1SensorAlarmSetData) {
		super(SensorAlarmSet, data);
	}
};
